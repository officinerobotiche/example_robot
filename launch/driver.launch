<!--
Copyright (c) 2016, Raffaello Bonghi
All rights reserved.
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of Officine Robotiche nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<launch>
    <!-- Your script with your URDF file -->
    <!-- Follow the guide or try with https://github.com/officinerobotiche/example_robot.git file -->
    <param name="robot_description" file="$(find example_robot)/urdf/myrobot.urdf"/>

    <!-- ORBus hardware driver -->
    <node pkg="orbus_interface" type="unav_node" name="unav" output="screen">
        <!-- You can write the definition about the serial port configuration
             and the controller and diagnostic frequency. -->
        <rosparam subst_value="true">
            serial_port: /dev/ttyUSB0
            serial_rate: 115200
            control_frequency: 10.0
            diagnostic_frequency: 1.0
        </rosparam>
        <!-- Add your personal definition when the unav_node start -->
        <rosparam command="load" file="$(find example_robot)/config/unav.yaml" />
    </node>

    <!-- Differential controller parameters and basic localization -->
    <rosparam command="load" file="$(find example_robot)/config/control.yaml" />

    <!-- Run the controller available in the uNav -->
    <!-- Follow the demo in https://github.com/officinerobotiche/example_robot.git -->
    <node name="base_controller_spawner" pkg="controller_manager" type="spawner" 
            args="unav_joint_publisher unav_velocity_controller --shutdown-timeout 3"/>

    <!-- Diagnostic Aggregator -->
    <!-- Follow the demo in https://github.com/officinerobotiche/example_robot.git -->
    <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator">
        <rosparam command="load" file="$(find example_robot)/config/diagnostics.yaml"/>
    </node>
</launch>
